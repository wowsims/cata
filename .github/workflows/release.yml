name: Release

on:
    # Inputs the workflow accepts.
    workflow_dispatch:
        inputs:
            ref:
                description: 'Commit Reference'
                default: 'master'
                required: true
            tag:
                description: 'Version Tag'
                default: 'v0.0.0'
                required: true

env:
    REGISTRY: ghcr.io
    IMAGE_NAME: ${{ github.repository }}

jobs:
    build-and-release:
        runs-on: ubuntu-latest
        permissions:
            contents: write
            packages: write

        steps:
            # Build Dependencies
            - name: Install Go
              uses: actions/setup-go@v2
              with:
                  go-version: 1.21.x

            - name: Install Protoc
              uses: arduino/setup-protoc@v1
              with:
                  version: 3.x
                  repo-token: ${{ secrets.GITHUB_TOKEN }}

            - name: Install Protoc Go plugin
              run: go install google.golang.org/protobuf/cmd/protoc-gen-go@latest

            - name: Install Node
              uses: actions/setup-node@v3
              with:
                  node-version: 20

            # Setup Docker
            - name: Setup QEMU
              uses: docker/setup-qemu-action@v3

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Log in to the Container registry
              uses: docker/login-action@v3
              with:
                  registry: ${{ env.REGISTRY }}
                  username: ${{ github.actor }}
                  password: ${{ secrets.GITHUB_TOKEN }}

            - name: Extract metadata
              id: meta
              uses: docker/metadata-action@v5
              with:
                  images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
                  tags: |
                      type=raw,value=latest
                      type=raw,value=${{ github.event.inputs.tag }}

            # Checkout, test and build
            - name: Checkout
              uses: actions/checkout@v2.3.1
              with:
                  ref: ${{ github.event.inputs.ref }}

            - name: Build ðŸ”§
              run: |
                  make clean && VERSION=${{ github.event.inputs.tag }} make release
                  
            - name: Test
              run: |
                  make test

            # Release
            - name: Build and push Docker image
              uses: docker/build-push-action@v6
              with:
                  context: .
                  file: ./release.Dockerfile
                  platforms: linux/amd64,linux/arm64
                  push: true
                  tags: ${{ steps.meta.outputs.tags }}
                  labels: ${{ steps.meta.outputs.labels }}

            - name: Release
              uses: ncipollo/release-action@v1
              with:
                  commit: ${{ github.event.inputs.ref }}
                  tag: ${{ github.event.inputs.tag }}
                  generateReleaseNotes: true
                  makeLatest: true
                  artifactErrorsFailBuild: true
                  artifacts: |
                      wowsimcli-amd64-linux.zip
                      wowsimcli-arm64-linux.zip
                      wowsimcli-windows.exe.zip
                      wowsimcata-amd64-darwin.zip
                      wowsimcata-arm64-darwin.zip
                      wowsimcata-amd64-linux.zip
                      wowsimcata-arm64-linux.zip
                      wowsimcata-windows.exe.zip
