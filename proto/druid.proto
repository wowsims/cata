syntax = "proto3";
package proto;

option go_package = "./proto";

import "common.proto";

message DruidTalents {
	// Balance
	int32 natures_grace = 1;
	int32 starlight_wrath = 2;
	int32 natures_majesty = 3;
	int32 genesis = 4;
	int32 moonglow = 5;
	int32 balance_of_power = 6;
	int32 euphoria = 7;
	bool moonkin_form = 8;
	bool typhoon = 9;
	int32 shooting_stars = 10;
	int32 owlkin_frenzy = 11;
	int32 gale_winds = 12;
	bool solar_beam = 13;
	int32 dreamstate = 14;
	bool force_of_nature = 15;
	bool sunfire = 16;
	bool earth_and_moon = 17;
	int32 fungal_growth = 18;
	int32 lunar_shower = 19;
	bool starfall = 20;

	// Feral Combat
	int32 feral_swiftness = 21;
	int32 furor = 22;
	int32 predatory_strikes = 23;
	int32 infected_wounds = 24;
	int32 fury_swipes = 25;
	int32 primal_fury = 26;
	int32 feral_aggression = 27;
	int32 king_of_the_jungle = 28;
	bool feral_charge = 29;
	int32 stampede = 30;
	int32 thick_hide = 31;
	bool leader_of_the_pack = 32;
	int32 brutal_impact = 33;
	int32 nurturing_instinct = 34;
	int32 primal_madness = 35;
	bool survival_instincts = 36;
	int32 endless_carnage = 37;
	int32 natural_reaction = 38;
	int32 blood_in_the_water = 39;
	int32 rend_and_tear = 40;
	bool pulverize = 41;
	bool berserk = 42;

	// Restoration
	int32 blessing_of_the_grove = 43;
	int32 natural_shapeshifter = 44;
	int32 naturalist = 45;
	int32 heart_of_the_wild = 46;
	int32 perseverance = 47;
	bool master_shapeshifter = 48;
	int32 improved_rejuvenation = 49;
	int32 living_seed = 50;
	int32 revitalize = 51;
	bool natures_swiftness = 52;
	int32 fury_of_stormrage = 53;
	int32 natures_bounty = 54;
	int32 empowered_touch = 55;
	int32 malfurions_gift = 56;
	int32 efflorescence = 57;
	bool wild_growth = 58;
	bool natures_cure = 59;
	int32 natures_ward = 60;
	int32 gift_of_the_earthmother = 61;
	bool swift_rejuvenation = 62;
	bool tree_of_life = 63;
}

enum DruidPrimeGlyph {
	DruidPrimeGlyphNone = 0;
	GlyphOfBerserk = 45601;
	GlyphOfBloodletting = 40901;
	GlyphOfInsectSwarm = 40919;
	GlyphOfLacerate = 67484;
	GlyphOfLifebloom = 40915;
	GlyphOfMangle = 40900;
	GlyphOfMoonfire = 40923;
	GlyphOfRegrowth = 40912;
	GlyphOfRejuvenation = 40913;
	GlyphOfRip = 40902;
	GlyphOfSavageRoar = 45604;
	GlyphOfStarfire = 40916;
	GlyphOfStarsurge = 45603;
	GlyphOfSwiftmend = 40906;
	GlyphOfTigersFury = 67487;
	GlyphOfWrath = 40922;
}
enum DruidMajorGlyph {
	DruidMajorGlyphNone = 0;
	GlyphOfBarkskin = 45623;
	GlyphOfEntanglingRoots = 40924;
	GlyphOfFaerieFire = 67485;
	GlyphOfFeralCharge = 67486;
	GlyphOfFerociousBite = 48720;
	GlyphOfFocus = 44928;
	GlyphOfFrenziedRegeneration = 40896;
	GlyphOfHealingTouch = 40914;
	GlyphOfHurricane = 40920;
	GlyphOfInnervate = 40908;
	GlyphOfMaul = 40897;
	GlyphOfMonsoon = 45622;
	GlyphOfOmenOfClarity = 206580;
	GlyphOfPounce = 40903;
	GlyphOfRebirth = 40909;
	GlyphOfSolarBeam = 40899;
	GlyphOfStarfall = 40921;
	GlyphOfThorns = 43332;
	GlyphOfWildGrowth = 45602;
}
enum DruidMinorGlyph {
	DruidMinorGlyphNone = 0;
	GlyphOfAquaticForm = 43316;
	GlyphOfChallengingRoar = 43334;
	GlyphOfDash = 43674;
	GlyphOfMarkOfTheWild = 43335;
	GlyphOfTheTreant = 68039;
	GlyphOfTyphoon = 44922;
	GlyphOfUnburdenedRebirth = 43331;
}

message DruidOptions {
	UnitReference innervate_target = 1;
}

message BalanceDruid {
  message Rotation {}

  message Options {
    DruidOptions class_options = 1;
	float okf_uptime = 2;
  }
  Options options = 3;
}

message FeralDruid {
  message Rotation {
	enum AplType {
		SingleTarget = 0;
		Aoe = 1;
	}
    enum BearweaveType {
      None = 0;
      Mangle = 1;
      Lacerate = 2;
    }
    enum BiteModeType {
      Emperical = 0;
      Analytical = 1;
    }

    BearweaveType bear_weave_type = 1;
	bool maintain_faerie_fire = 2;
	int32 min_combos_for_rip = 3;
	bool use_rake = 4;
	bool use_bite = 5;
	bool mangle_spam = 6;
	float bite_time = 7;
	int32 min_combos_for_bite = 8;
	int32 berserk_bite_thresh = 9;
	bool bite_during_execute = 13;
	int32 rip_leeway = 19;
	bool powerbear = 10;
	float min_roar_offset = 11;
	BiteModeType bite_mode_type = 12;
	bool snek_weave = 14;
	bool manual_params = 17;
	AplType rotation_type = 21;
  }
  Rotation rotation = 1;

  message Options {
    DruidOptions class_options = 1;
    bool assume_bleed_active = 4;
  }
  Options options = 3;
}

message FeralTankDruid {
  message Rotation {
		// Minimum rage to queue HS or Cleave.
		int32 maul_rage_threshold = 1;
		bool maintain_demoralizing_roar = 2;
		double lacerate_time = 3;
  }

  message Options {
    DruidOptions class_options = 1;
	double starting_rage = 2;
  }
  Options options = 3;
}

message RestorationDruid {
  message Rotation {}

  message Options {
    DruidOptions class_options = 1;
  }
  Options options = 3;
}
