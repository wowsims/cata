syntax = "proto3";
package proto;

option go_package = "./proto";
// DO NOT REMOVE THE COMMENTS
// BEGIN GENERATED
// PaladinTalents message.
message PaladinTalents {
    // Holy
    int32 arbiter_of_the_light = 1;
    int32 protector_of_the_innocent = 2;
    int32 judgements_of_the_pure = 3;
    int32 clarity_of_purpose = 4;
    int32 last_word = 5;
    int32 blazing_light = 6;
    int32 denounce = 7;
    bool divine_favor = 8;
    int32 infusion_of_light = 9;
    int32 daybreak = 10;
    int32 enlightened_judgements = 11;
    bool beacon_of_light = 12;
    int32 speed_of_light = 13;
    bool sacred_cleansing = 14;
    int32 conviction = 15;
    bool aura_mastery = 16;
    int32 paragon_of_virtue = 17;
    int32 tower_of_radiance = 18;
    int32 blessed_life = 19;
    bool light_of_dawn = 20;
    // Protection
    int32 divinity = 21;
    int32 seals_of_the_pure = 22;
    int32 eternal_glory = 23;
    int32 judgements_of_the_just = 24;
    int32 toughness = 25;
    int32 improved_hammer_of_justice = 26;
    int32 hallowed_ground = 27;
    int32 sanctuary = 28;
    bool hammer_of_the_righteous = 29;
    int32 wrath_of_the_lightbringer = 30;
    int32 reckoning = 31;
    bool shield_of_the_righteous = 32;
    int32 grand_crusader = 33;
    bool vindication = 34;
    bool holy_shield = 35;
    int32 guarded_by_the_light = 36;
    bool divine_guardian = 37;
    int32 sacred_duty = 38;
    int32 shield_of_the_templar = 39;
    bool ardent_defender = 40;
    // Retribution
    int32 eye_for_an_eye = 41;
    int32 crusade = 42;
    int32 improved_judgement = 43;
    int32 guardians_favor = 44;
    int32 rule_of_law = 45;
    int32 pursuit_of_justice = 46;
    bool communion = 47;
    int32 the_art_of_war = 48;
    int32 long_arm_of_the_law = 49;
    bool divine_storm = 50;
    bool sacred_shield = 51;
    bool sanctity_of_battle = 52;
    bool seals_of_command = 53;
    int32 sanctified_wrath = 54;
    int32 selfless_healer = 55;
    bool repentance = 56;
    int32 divine_purpose = 57;
    int32 inquiry_of_faith = 58;
    int32 acts_of_sacrifice = 59;
    bool zealotry = 60;
}

enum PaladinPrimeGlyph {
    PaladinPrimeGlyphNone = 0;
    GlyphOfJudgement = 41092;
    GlyphOfCrusaderStrike = 41098;
    GlyphOfExorcism = 41103;
    GlyphOfWordOfGlory = 41105;
    GlyphOfDivineFavor = 41106;
    GlyphOfSealOfInsight = 41110;
    GlyphOfSealOfTruth = 43869;
    GlyphOfHammerOfTheRighteous = 45742;
    GlyphOfTemplarsVerdict = 45743;
    GlyphOfShieldOfTheRighteous = 45744;
    GlyphOfHolyShock = 45746;
}

enum PaladinMajorGlyph {
    PaladinMajorGlyphNone = 0;
    GlyphOfRebuke = 41094;
    GlyphOfHammerOfJustice = 41095;
    GlyphOfDivineProtection = 41096;
    GlyphOfHammerOfWrath = 41097;
    GlyphOfConsecration = 41099;
    GlyphOfFocusedShield = 41101;
    GlyphOfTurnEvil = 41102;
    GlyphOfCleansing = 41104;
    GlyphOfTheAsceticCrusader = 41107;
    GlyphOfDivinity = 41108;
    GlyphOfLightOfDawn = 41109;
    GlyphOfLayOnHands = 43367;
    GlyphOfHolyWrath = 43867;
    GlyphOfDazingShield = 43868;
    GlyphOfBeaconOfLight = 45741;
    GlyphOfDivinePlea = 45745;
    GlyphOfSalvation = 45747;
    GlyphOfTheLongWord = 66918;
}

enum PaladinMinorGlyph {
    PaladinMinorGlyphNone = 0;
    GlyphOfRighteousness = 41100;
    GlyphOfBlessingOfMight = 43340;
    GlyphOfBlessingOfKings = 43365;
    GlyphOfInsight = 43366;
    GlyphOfTruth = 43368;
    GlyphOfJustice = 43369;
}

// END GENERATED

enum Blessings {
	BlessingUnknown = 0;
	BlessingOfKings = 1;
	BlessingOfMight = 2;
}

enum PaladinAura {
	Devotion = 0;
	Retribution = 1;
	Resistance = 2;
}

enum PaladinSeal {
	Truth = 0;
	Justice = 1;
	Insight = 2;
	Righteousness = 3;
}

message PaladinOptions {
	PaladinSeal seal = 2;
	PaladinAura aura = 3;
	bool snapshot_guardian = 4;
}

message RetributionPaladin {
	message Rotation {}

	message Options {
		PaladinOptions class_options = 1;
		int32 starting_holy_power = 2;
	}
	Options options = 3;
}

message ProtectionPaladin {
	message Rotation {}

	message Options {
		PaladinOptions class_options = 1;
	}
	Options options = 3;
}

message HolyPaladin {
	message Rotation {}

	message Options {
		PaladinOptions class_options = 2;
	}
	Options options = 3;
}
